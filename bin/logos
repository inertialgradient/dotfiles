#!/usr/bin/env bash

#
# Usage:
#   logos [subcommand (default: reload)]
#
# Subcommands:
#   reload                : reload launch agent
#   deploy [--regenerate] : deploy site
#   serve  [--regenerate] : serve site locally
#   logs   [--deploy]     : view logs
#   build                 : regenerate content
#   help                  : this message

set -e

GREEN="\033[0;32m"
RED="\033[0;31m"
RESET="\033[0m"
CONTENT_DIR="content"

SUBCOMMAND=${1:-reload}
FLAG=${2}

usage() {
  grep '^#' < "$0" | tail -n +2 | cut -c 3-
}

regenerate_content() {
  printf "Resetting content directory... "
  rm -rf "${CONTENT_DIR}"
  printf "${GREEN}done${RESET}\n"

  printf "Generating Markdown from Org files... "
  bin/generate
  printf "${GREEN}done${RESET}\n"
}

deploy_site() {
  echo > /tmp/com.tensorconclave.notes_deploy.out
  echo > /tmp/com.tensorconclave.notes_deploy.err
  printf "\n[Deploy: %s]\n " "$(date)"

  if ./bin/deploy "$1"; then
    printf "\n${GREEN}Deployed.${RESET}\n"
  else
    printf "\n${RED}Error.${RESET}\n"
    exit 1
  fi
}

reload_launch_agent() {
  printf "Reloading launch agent... "
  agent=~/Library/LaunchAgents/com.tensorconclave.notes_serve.plist
  # check if agent is loaded
  if launchctl list | grep -q "com.tensorconclave.notes_serve"; then
    printf "unloading... "
    launchctl unload $agent
  fi
    printf "loading... "
  launchctl load $agent
  printf "${GREEN}done${RESET}\n"
}

serve_site_locally() {
  echo > /tmp/com.tensorconclave.notes_serve.out
  echo > /tmp/com.tensorconclave.notes_serve.err
  ./bin/serve "$1"
}

tail_logs() {
  if [[ "${1}" == "--deploy" ]]; then
    tail -f /tmp/com.tensorconclave.notes_deploy.{out,err}
  else
    tail -f /tmp/com.tensorconclave.notes_serve.{out,err}
  fi
}

cd "${HOME}/Writing/logos"

case "${SUBCOMMAND}" in
  build)
    regenerate_content
    ;;
  deploy)
    deploy_site "${FLAG}"
    ;;
  serve)
    serve_site_locally "${FLAG}"
    ;;
  reload)
    reload_launch_agent
    ;;
  help)
    usage
    ;;
  logs)
    tail_logs "${FLAG}"
    ;;
  *)
    printf "[${RED}Error${RESET}] Unrecognized subcommand: $1"
    usage
    ;;
esac
