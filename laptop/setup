#!/usr/bin/env bash
#-------------------------------------------------------------
# Preamble
#-------------------------------------------------------------
LOCAL_DOTFILES="$HOME/.dotfiles"
SYNCED="$HOME/Dropbox/Sync"

function getc() {
  IFS= read -r -n1 -d '' "$@"
}

function step() {
  echo && echo "$1 ..."
}

#-------------------------------------------------------------
# Set up logging
#-------------------------------------------------------------
log_location="$HOME/Desktop/laptop.log"
touch $log_location

# pipe this whole script to tee
(
  step "Installing CLI tools, dotfiles, and Homebrew"

  # ===================================================

  step "Installing Xcode command line tools"

  loc="$(xcode-\select -p 2> /dev/null)"
  if [[ ! $loc =~ "CommandLineTools" ]]; then
    xcode-\select --install
    getc
  fi

  step "Accepting the Xcode CLI tools license"
  sudo xcodebuild -license

  # ===================================================

  step "Cloning jkrmr/dotfiles"

  if [ ! -d $LOCAL_DOTFILES ]; then
    git clone --recursive https://github.com/jkrmr/dotfiles.git \
      $LOCAL_DOTFILES 1> /dev/null
  fi

  # ===================================================

  step "Cloning spacemacs config repos"

  if [ ! -d $HOME/.emacs.d ]; then
    git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
  fi

  if [ ! -d $HOME/.spacemacs.d ]; then
    git clone --recursive https://github.com/jkrmr/dot_spacemacs $HOME/.spacemacs.d
  fi

  # ===================================================

  step "Installing or updating Homebrew"

  brew_installed="$(command -v brew >/dev/null)"
  if [[ -z "$brew_installed" ]]; then
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' |\
      ruby
  else
    brew update
  fi

  # ===================================================

  step "Installing Homebrew Cask"

  brew tap caskroom/cask

  # ===================================================

  step "Installing Homebrew formulas"

  source "$HOME/.dotfiles/laptop/homebrew_packages.sh"

  # ===================================================

  step "Setting up Dropbox (press any key when complete)"

  brew cask install dropbox
  open $HOME/Applications/Dropbox.app
  getc

  # ===================================================

  step "Installing Rbenv, latest Ruby, RubyGems"

  mkdir "$HOME/.rbenv"
  ln -sf $LOCAL_DOTFILES/default-gems $HOME/.rbenv/default-gems

  eval "$(rbenv init - zsh)"

  ruby_version="$(curl -sSL http://ruby.thoughtbot.com/latest)"
  if ! rbenv versions | grep -Fq "$ruby_version"; then
    step "Installing Ruby $ruby_version"
    rbenv install -s "$ruby_version"
  fi

  rbenv global "$ruby_version"
  rbenv shell "$ruby_version"
  rbenv rehash

  # ===================================================

  step "Installing Bundler"

  gem install bundler

  # ===================================================

  step "Linking OpenSSL, Installing libyaml"

  brew unlink openssl && brew link openssl --force
  brew install --force libyaml

  # ===================================================

  step "Installing GNU tools"
  source "$HOME/.dotfiles/laptop/gnu_tools.sh"

  step "Installing Ruby, JS libraries"
  source "$HOME/.dotfiles/laptop/libraries.sh"

  step "Installing GUI apps with Homebrew Cask"
  source "$HOME/.dotfiles/laptop/homebrew_cask_packages.sh"

  step "Installing Homebrew Packages"
  source "$HOME/.dotfiles/laptop/homebrew_package_sets.sh"

  # ==================================================

  step "Setting up LaunchAgents"

  mkdir -p ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/emacs/*.plist ~/Library/LaunchAgents

  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.emacs.plist

  # ======================================================

  step "Setting homebrewed zsh as the default shell"

  echo /usr/local/bin/bash | sudo tee -a /etc/shells
  echo /usr/local/bin/zsh | sudo tee -a /etc/shells
  chsh -s /usr/local/bin/zsh

  # ======================================================

  step "Linking dotfiles into home directory"

  ln -s $HOME/.dotfiles/rcrc $HOME/.rcrc
  rcup

  # ======================================================

  step "Creating ~/.ssh"

  echo mkdir $HOME/.ssh
  mkdir $HOME/.ssh

  echo cp $SYNCED/ssh/* $HOME/.ssh
  cp $SYNCED/ssh/* $HOME/.ssh

  echo chmod 600 $HOME/ssh/*
  chmod 600 $HOME/ssh/*

  # ======================================================

  step "Creating ~/.gnupg"

  echo mkdir $HOME/.gnupg
  mkdir $HOME/.gnupg

  echo cp -r $SYNCED/gnupg/* $HOME/.gnupg
  cp -r $SYNCED/gnupg/* $HOME/.gnupg

  # ===================================================

  step "Configuring Bundler"

  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs "$((number_of_cores - 1))"

  # ======================================================

  step "Setting Mac OS X defaults"

  source $LOCAL_DOTFILES/osx/set_defaults.sh

  # ======================================================

  step "Installing Vim packages"

  vim +PlugUpdate +PlugClean! +qall

  # ======================================================

  step "Downloading miscellaneous installers"

  echo wget -O ~/Desktop/delivery-status.zip https://junecloud.com/get/delivery-status-widget
  wget -O ~/Desktop/delivery-status.zip https://junecloud.com/get/delivery-status-widget

  # ======================================================

  step "Setup script is complete. Go install Xcode."

) | tee $log_location
