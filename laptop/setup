#!/usr/bin/env bash
#-------------------------------------------------------------
# Preamble
#-------------------------------------------------------------
LOCAL_DOTFILES="$HOME/.dotfiles"
SYNCED="$HOME/Dropbox/Sync"

function getc() {
  IFS= read -r -n1 -d '' "$@"
}

function step() {
  echo && echo $1
}

function substep() {
  echo "    $1"
}

#-------------------------------------------------------------
# Set up dotfiles
#-------------------------------------------------------------
step "Checking for command line tools..."
loc="$(xcode-\select -p 2> /dev/null)"
if [[ $loc =~ "CommandLineTools" ]]; then
  substep "Command line tools are already installed. Skipping."
else
  substep "Installing the Command Line Tools (expect a GUI popup):"
  xcode-\select --install
  substep "Press any key when the installation has completed."
  getc
fi


step "Cloning jkrmr/dotfiles..."
if [ -d $LOCAL_DOTFILES ]; then
  substep "$LOCAL_DOTFILES already exists. Skipping."
else
  git clone https://github.com/jkrmr/dotfiles.git $LOCAL_DOTFILES
fi


step "Linking laptop script customizations..."
ln -s $LOCAL_DOTFILES/home/laptop.local ~/.laptop.local


step "Running laptop script. Logging to ~/Desktop/laptop.log..."
laptop_script='https://raw.githubusercontent.com/thoughtbot/laptop/master/mac'
log_location="$HOME/Desktop/laptop.log"
touch $log_location
curl --remote-name $laptop_script
sh mac 2>&1 | tee $log_location


step "Setting homebrewed zsh as the default shell..."
source "$HOME/.zshrc"  # reload $PATH
echo "$(which bash)" | sudo tee -a /etc/shells
echo "$(which zsh)"  | sudo tee -a /etc/shells
chsh -s $(which zsh)  # /usr/local/bin/zsh


step "Installing rcm..."
if [[ -n "$(which rcup 2> /dev/null)" ]]; then
  substep "rcm is already installed. Skipping..."
else
  brew tap thoughtbot/formulae 2> /dev/null
  brew install rcm
fi


step "Linking dotfiles into home directory..."
env RCRC=$LOCAL_DOTFILES/rcrc rcup


step "Linking remaining miscellaneous dotfiles..."
rm -rf $HOME/.bin
ln -sf $LOCAL_DOTFILES/home/bin        $HOME/.bin

rm -rf $HOME/.emacs.d
ln -sf $LOCAL_DOTFILES/home/emacs.d    $HOME/.emacs.d

rm -rf $HOME/.lein
ln -sf $LOCAL_DOTFILES/home/lein       $HOME/.lein

rm -rf $HOME/.pry
ln -sf $LOCAL_DOTFILES/home/pry        $HOME/.pry

rm -rf $HOME/.zsh
ln -sf $LOCAL_DOTFILES/home/zsh        $HOME/.zsh

rm -rf $HOME/.rbenv/
ln -sf $LOCAL_DOTFILES/default-gems    $HOME/.rbenv/default-gems

rm -rf $HOME/.tmuxinator
ln -sf $LOCAL_DOTFILES/home/tmuxinator $HOME/.tmuxinator

rm -rf $HOME/.vim
ln -sf $LOCAL_DOTFILES/home/vim        $HOME/.vim

rm -rf $HOME/.bundle
ln -sf $LOCAL_DOTFILES/home/bundle     $HOME/.bundle


step "Linking to synced preference files..."
ln -sf $SYNCED/dotfiles/aws           $HOME/.aws
ln -sf $SYNCED/dotfiles/env.secure.sh $HOME/.env.secure.sh
ln -sf $SYNCED/dotfiles/exercism.json $HOME/.exercism.json
ln -sf $SYNCED/Preferences/Firefox    $HOME/Library/Application\ Support
ln -sf $SYNCED/Preferences/StickiesDatabase          $HOME/Library
ln -sf $SYNCED/Preferences/com.jitouch.Jitouch.plist $HOME/Library/Preferences


step "Creating ~/.ssh"
mkdir $HOME/.ssh

step "Installing Cask"
brew install caskroom/cask/brew-cask

step "Setting up Dropbox"
substep "Installing Dropbox"
brew cask install dropbox
substep "Opening Dropbox..."
open $HOME/Applications/Dropbox.app
substep "Press any key when the Dropbox sync has completed."
getc

for file in id_rsa id_rsa.pub jkrmr-aws-usca.pem; do
  cp $SYNCED/dotfiles/$file  $HOME/.ssh
  chmod 700 $HOME/.ssh/$file
done

step "Installing Xcode"
substep "Install Xcode."
substep "Press any key when the Xcode Installation has completed."
getc

step "Installing Solarized Dark theme for Xcode..."
mkdir -p $HOME/Library/Developer/Xcode/UserData/FontAndColorThemes
ln -s $SYNCED/Preferences/theming/color_schemes/Solarized\ Dark.dvtcolortheme $HOME/Library/Developer/Xcode/UserData/FontAndColorThemes/


step "Setting Mac OS X defaults..."
source $LOCAL_DOTFILES/osx/set_defaults.sh

step "Installing Vim packages"
source ~/.zshrc
vimplug

step "Setup script is complete."
