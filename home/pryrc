Pry.config.theme  = 'solarized'
Pry.config.editor = 'vim'

# Return only the methods not present on basic objects
# alternatively, use `ls <object> -m`
class Object
  def method_list
    (self.methods - Object.instance_methods).sort
  end
end

# Aliases for common commands
Pry.commands.alias_command 'q', 'exit'
Pry.commands.alias_command '!!', 'disable-pry'
Pry.commands.alias_command 'w', 'whereami'
Pry.commands.alias_command 'r!', 'reload!' rescue nil
Pry.commands.alias_command 'sh', 'shell-mode'

# Format stacktraces
Pry.config.exception_handler = proc do |output, exception, _|
  output.puts "#{exception.class}: #{exception.message}"
  exception.backtrace.each do |bt|
    puts "\tfrom: #{bt}"
    break if bt =~ /^\(pry\)/
  end
end

unless defined?(Rails) && Rails.env
  begin
    # gem install pry-coolline pry-doc pry-git pry-byebug hirb awesome_print
    require 'awesome_print' # Use awesome_print's output formatting and Pry's pager
    require 'hirb'          # Use Hirb for tabular output
  rescue LoadError
    puts 'Pry enhancements not loaded.'
  end
end

if defined?(PryByebug)
  Pry.commands.alias_command 'c', 'continue'
  Pry.commands.alias_command 's', 'step'
  Pry.commands.alias_command 'n', 'next'
  Pry.commands.alias_command 'f', 'finish'
end

if defined?(AwesomePrint)
  AwesomePrint.defaults = { indent: -2 }
  AwesomePrint.pry!
end

if defined?(Hirb)
  Hirb.enable
  extend Hirb::Console
end

