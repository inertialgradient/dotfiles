" ----------------- Base Settings ------------------------
set nocompatible
filetype plugin indent on

" Don't display 'Pattern not found' messages
set shortmess+=c

" add fzf to rtp
set runtimepath+=~/.fzf

" Disable italics
let g:solarized_italic = 0

" ----------------- Load Plugins ------------------------
call plug#begin('~/.vim/plugged')
  source $HOME/.vim/manifest.vim
call plug#end()

" ---------------- Overrides  --------------------------
if filereadable(expand('~/.vimrc.local'))
  source $HOME/.vimrc.local
endif

"-------------------------------------------------------------
" Fix for YankRing bug
"-------------------------------------------------------------
let g:yankring_clipboard_monitor=0

"-------------------------------------------------------------
" OCaml setup
"-------------------------------------------------------------
" add ocp-indent, merlin to rtp
let g:opamshare = substitute(system('opam config var share 2> /dev/null'),'\n$','','''')
execute 'set rtp+=' . g:opamshare . '/ocp-indent/vim'
execute 'set rtp+=' . g:opamshare . '/merlin/vim'
execute 'helptags ' . g:opamshare . '/merlin/vim/doc'

" ## added by OPAM user-setup for vim / base ## 93ee63e278bdfc07d1139a748ed3fff2 ## you can edit, but keep this line
let s:opam_share_dir = system("opam config var share")
let s:opam_share_dir = substitute(s:opam_share_dir, '[\r\n]*$', '', '')

let s:opam_configuration = {}

function! OpamConfOcpIndent()
  execute "set rtp^=" . s:opam_share_dir . "/ocp-indent/vim"
endfunction
let s:opam_configuration['ocp-indent'] = function('OpamConfOcpIndent')

function! OpamConfOcpIndex()
  execute "set rtp+=" . s:opam_share_dir . "/ocp-index/vim"
endfunction
let s:opam_configuration['ocp-index'] = function('OpamConfOcpIndex')

function! OpamConfMerlin()
  let l:dir = s:opam_share_dir . "/merlin/vim"
  execute "set rtp+=" . l:dir
endfunction
let s:opam_configuration['merlin'] = function('OpamConfMerlin')

let s:opam_packages = ["ocp-indent", "ocp-index", "merlin"]
let s:opam_check_cmdline = ["opam list --installed --short --safe --color=never"] + s:opam_packages
let s:opam_available_tools = split(system(join(s:opam_check_cmdline)))
for tool in s:opam_packages
  " Respect package order (merlin should be after ocp-index)
  if count(s:opam_available_tools, tool) > 0
    call s:opam_configuration[tool]()
  endif
endfor
" ## end of OPAM user-setup addition for vim / base ## keep this line
