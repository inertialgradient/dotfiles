#!/usr/bin/env ruby

require "active_support/inflector"

GITHUB_ROOT = File.path("#{Dir.home}/github/github")
ROUTES_FILE = File.path("#{GITHUB_ROOT}/tmp/routes-cache.txt")
CONTROLLER_CONSTANT = ARGV.first
CONTROLLER_NAME_PLURAL = ActiveSupport::Inflector.underscore(CONTROLLER_CONSTANT)
                                                 .sub("_controller", "")

if !File.exist?(ROUTES_FILE) || ARGV.any? { |arg| arg == "--reset" }
  system("#{GITHUB_ROOT}/bin/rake routes > #{ROUTES_FILE}")
end

# Return an Array containing three Strings: verb, path, and controller#action
# String -> [3]String
def parse_line(line)
  line.split.select { |s| s =~ %r{(GET|POST|PUT|PATCH|DELETE)|#|/} && s !~ /[{}=>]/ }
end

parsed_lines = File.readlines(ROUTES_FILE)
                   .select { |line| line =~ /(?<=\s)#{CONTROLLER_NAME_PLURAL}\#/ }
                   .map { |line| parse_line(line) }

max_lengths = parsed_lines.transpose.map { |col| col.max_by(&:length).length }

formatted_lines = parsed_lines.map do |line|
  line.zip(max_lengths).map { |col, len| col.ljust(len) }.join("\s" * 2)
end

markdown = <<-MD
[org-idm] Enforce SAML SSO on #{CONTROLLER_CONSTANT}

Enforces external identity session requirement on `#{CONTROLLER_CONSTANT}`.

Tracking https://github.com/github/github/issues/64286

Enforcement Guide Audit
-------------------------
- [x] remove `skip_before_filter :require_active_external_identity_session`
- [x] verify `organization_for_external_identity_session` resolves to an `Organization`
- [x] identify actions that shouldn't be filtered and `skip_before_filter :only` them
- [x] update whitelist (remove the controller from the whitelist, if possible)
- [ ] if controller has xhr request add to todo list
- [ ] test critical behavior/endpoints
- [ ] cc github/orgs-saml-project for awareness/review

Endpoints affected
---------------
```
#{formatted_lines.join("\n")}
```
MD

IO.popen("pbcopy", "w") { |f| f << markdown }
puts markdown, "(copied to clipboard)"
