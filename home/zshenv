#!/usr/bin/env bash

#-------------------------------------------------------------
# N / NODE
#-------------------------------------------------------------
export N_PREFIX="$HOME/.node"

#-------------------------------------------------------------
# GO
#-------------------------------------------------------------
export GOPATH=$HOME/.go
export GOROOT=/usr/local/opt/go/libexec

#-------------------------------------------------------------
# ELM
#-------------------------------------------------------------
export ELM_HOME=$HOME/.elm

#-------------------------------------------------------------
# PATH
#-------------------------------------------------------------
PATH="$HOME/.bin"                  # user binaries
PATH+=$GNUTOOLS_PATHS              # GNU command-line tools
PATH+=":$HOME/.exenv/bin"          # Exenv binary path
PATH+=":$GOPATH/bin:$GOROOT/bin"   # Go binaries
PATH+=":$HOME/.gem/ruby/2.0.0/bin" # user gems for system ruby
PATH+=":$N_PREFIX/bin"             # n version binaries
PATH+=":$HOME/.fzf/bin"            # FZF fuzzy-finder
PATH+=":$HOME/anaconda3/bin"       # Anaconda binaries
PATH+=":$HOME/.gem/ruby/2.3.0/bin" # user-install system Ruby gems
PATH+=":/usr/local/heroku/bin"     # heroku-toolbelt binaries
PATH+=":/usr/local/bin"            # homebrewed binaries
PATH+=":/usr/local/sbin"           # homebrewed binaries
PATH+=":/usr/bin:/bin"             # system binaries
PATH+=":/usr/sbin:/sbin"           # system binaries requiring root
PATH+=":/opt/X11/bin"              # added by OSX
PATH+=":/Library/TeX/texbin"
PATH+=":$HOME/Library/texlive/2016/bin/x86_64-darwin/"
export PATH

#-------------------------------------------------------------
# EXENV
#-------------------------------------------------------------
if which exenv > /dev/null; then
  eval "$(exenv init -)";
fi

#-------------------------------------------------------------
# Emacs
#-------------------------------------------------------------
if [ -n "$INSIDE_EMACS" ]; then
  export EDITOR=emacsclient
fi

#-------------------------------------------------------------
# GPG
#-------------------------------------------------------------
if [ ! -f "${HOME}/.gpg-agent-info" ]; then
  gpg-agent \
    --daemon \
    --write-env-file "${HOME}/.gpg-agent-info" >/dev/null
fi

# shellcheck source=/dev/null
source "${HOME}/.gpg-agent-info"
export GPG_AGENT_INFO

GPG_TTY=$(tty)
export GPG_TTY

#-------------------------------------------------------------
# RBENV
#-------------------------------------------------------------
if which rbenv > /dev/null; then
  eval "$(rbenv init - --no-rehash)"
fi
