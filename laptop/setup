#!/usr/bin/env bash
#-------------------------------------------------------------
# Preamble
#-------------------------------------------------------------
LOCAL_DOTFILES="$HOME/.dotfiles"
SYNCED="$HOME/Dropbox/Sync"

function getc() {
  IFS= read -r -n1 -d '' "$@"
}

function step() {
  echo && echo "$1 ..."
}

#-------------------------------------------------------------
# Set up logging
#-------------------------------------------------------------
log_location="$HOME/Desktop/laptop.log"
touch "$log_location"

# pipe this whole script to tee
(
  step "Installing CLI tools, dotfiles, and Homebrew"

  # ===================================================

  step "Installing Xcode command line tools"

  loc="$(xcode-\select -p 2> /dev/null)"
  if [[ ! "$loc" =~ "CommandLineTools" ]]; then
    xcode-\select --install
    getc
  fi

  step "Accepting the Xcode CLI tools license"
  echo sudo xcodebuild -license
  sudo xcodebuild -license

  # ===================================================

  step "Cloning jmromer/dotfiles"

  if [ ! -d "$LOCAL_DOTFILES" ]; then
    git clone --recursive \
      https://github.com/jmromer/dotfiles.git \
      "$LOCAL_DOTFILES" 1> /dev/null
  fi

  # ===================================================

  step "Cloning emacs config repo"

  if [ ! -d "$HOME/.emacs.d" ]; then
    git clone https://github.com/syl20bnr/spacemacs \
      --branch=develop \
      "${HOME}/.emacs.d"
  fi

  # ===================================================

  step "Installing or updating Homebrew"

  brew_installed="$(command -v brew >/dev/null)"
  if [[ -z "$brew_installed" ]]; then
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' |\
      ruby
  else
    brew update
  fi

  # ===================================================

  step "Installing Homebrew Cask"

  brew tap caskroom/cask

  # ===================================================

  step "Installing Homebrew formulas"

  source "$HOME/.dotfiles/laptop/homebrew_packages.sh"

  # ===================================================

  step "Setting up Dropbox (press any key when complete)"

  brew cask install dropbox
  open /Applications/Dropbox.app
  getc

  # ===================================================

  # step "Installing user gems for system ruby"
  # echo gem install --user neovim vim-vint gem-ctags tmuxinator
  # gem install --user neovim vim-vint gem-ctags tmuxinator

  # ===================================================

  step "Installing Rbenv, latest Ruby, RubyGems"

  mkdir "$HOME/.rbenv"
  ln -sf $LOCAL_DOTFILES/default-gems $HOME/.rbenv/default-gems

  eval "$(rbenv init - zsh)"

  # TODO: Prompt for desired Ruby version
  ruby_version="2.5.3"
  if ! rbenv versions | grep -Fq "$ruby_version"; then
    step "Installing Ruby $ruby_version"
    rbenv install -s "$ruby_version"
  fi

  rbenv global "$ruby_version"
  rbenv shell "$ruby_version"
  rbenv rehash

  # ===================================================

  step "Installing Bundler"

  gem install bundler

  # ===================================================

  step "Linking OpenSSL, Installing libyaml"

  brew unlink openssl && brew link openssl --force
  brew install --force libyaml

  # ===================================================

  step "Installing GNU tools"
  source "$HOME/.dotfiles/laptop/gnu_tools.sh"

  step "Installing Ruby, JS libraries"
  #-------------------------------------------------------------
  # Generate tags for ruby stdlib
  #-------------------------------------------------------------
  mkdir -p ~/.rbenv/plugins
  git clone git://github.com/tpope/rbenv-ctags.git  ~/.rbenv/plugins/rbenv-ctags
  rbenv ctags

  #-------------------------------------------------------------
  # Update RubyGems and generate tags for gems
  #-------------------------------------------------------------
  gem install gem-ctags
  rbenv rehash
  gem ctags

  step "Installing GUI apps with Homebrew Cask"
  source "$HOME/.dotfiles/laptop/homebrew_cask_packages.sh"

  # ==================================================

  step "Setting up LaunchAgents"

  mkdir -p ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents
  ln -sfv /usr/local/opt/emacs/*.plist ~/Library/LaunchAgents

  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.emacs.plist

  # ======================================================

  step "Setting homebrewed zsh as the default shell"

  echo /usr/local/bin/bash | sudo tee -a /etc/shells
  echo /usr/local/bin/zsh | sudo tee -a /etc/shells
  chsh -s /usr/local/bin/zsh

  # ======================================================

  step "Linking dotfiles into home directory"

  ln -s $HOME/.dotfiles/rcrc $HOME/.rcrc
  rcup

  mkdir $HOME/.config
  ln -s $SYNCED/hub $HOME/.config/hub
  ln -s $SYNCED/karabiner $HOME/.config/karabiner
  ln -s $SYNCED/exercism $HOME/.config/exercism

  # ======================================================

  step "Creating ~/.ssh"

  echo mkdir $HOME/.ssh
  mkdir $HOME/.ssh

  echo cp $SYNCED/ssh/* $HOME/.ssh
  cp $SYNCED/ssh/* $HOME/.ssh

  echo chmod 600 $HOME/ssh/*
  chmod 600 $HOME/ssh/*

  # ======================================================

  step "Creating ~/.gnupg"

  echo mkdir $HOME/.gnupg
  mkdir $HOME/.gnupg

  echo cp -r $SYNCED/gnupg/* $HOME/.gnupg
  cp -r $SYNCED/gnupg/* $HOME/.gnupg

  # ===================================================

  step "Configuring Bundler"

  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs "$((number_of_cores - 1))"

  # ======================================================

  step "Setting Mac OS X defaults"

  source $LOCAL_DOTFILES/osx/set_defaults.sh

  #-------------------------------------------------------------
  # terminfo entries
  #-------------------------------------------------------------

  step "Creating terminfo entries"

  for file in $HOME/.dotfiles/terminfo/*; do
    echo tic $file
    tic $file
  done

  # ======================================================

  step "Downloading miscellaneous installers"

  echo wget -O ~/Desktop/delivery-status.zip https://junecloud.com/get/delivery-status-widget
  wget -O ~/Desktop/delivery-status.zip https://junecloud.com/get/delivery-status-widget

  # ======================================================

  #-------------------------------------------------------------
  # Node
  #-------------------------------------------------------------
  echo "Installing n and node..."
  curl -L http://git.io/n-install | N_PREFIX=~/.node bash -s -- -y

  source "$HOME/.zshrc"

  n latest
  npm install -g npm \
  eslint \
  babel-eslint \
  eslint-plugin-react \
  js-beautify \
  prettier \
  standard \
  tern \
  create-react-app \
  react-native-cli \
  typescript \
  javascript-typescript-langserver

  # Install Anaconda
  echo "Installing Python"
  curl \
    -o ~/Desktop/anaconda_install.sh \
    https://repo.anaconda.com/archive/Anaconda3-5.3.1-MacOSX-x86_64.sh

  # run installer
  bash ~/Desktop/anaconda_install.sh

  # Install Python packages for emacs
  pip install --upgrade "jedi>=0.9.0" \
                        "json-rpc>=1.8.1" \
                        "service_factory>=0.1.5" \
                        python-language-server \
                        pyls-isort \
                        pyls-mypy \
                        flake8 \
                        autoflake \
                        hy \
                        pip \
                        pygments \
                        setuptools \
                        vim-vint \
                        yapf \
                        importmagic \
                        epc

  # echo "Installing Elixir"
  # brew install exenv elixir-build erlang
  # exenv install 1.7.4

  #-------------------------------------------------------------
  # Vim bootstrap
  #-------------------------------------------------------------
  step "Installing Vim packages"
  source "$HOME/.zshrc"

  # ======================================================

  step "Setup script is complete"

  step "Adobe Creative Suite"
  step "https://www.adobe.com/"

  step "JetBrains IDEs"
  step "https://www.jetbrains.com/"

  step "Docker for Mac"
  step "https://www.docker.com/products/docker-desktop"

) | tee $log_location
